# Create a Virtual Environment
  python -m venv myenv*       # Creates a folder named (myenv*) with its own Python and pip

# Activate the Virtual Environment from CMD (Windows):
  myenv*\Scripts\activate

# Install a specific version of a package:
  pip install package_name==version
  
ðŸ”¸ Examples:
  pip install pandas==1.5.3
  pip install numpy==1.24.2
  pip install matplotlib==3.7.1

# Check Installed Version
  pip list

# Launch VSCode from the Environment
  code

# Use the Environment in VSCode
    Open your project folder in VSCode
    Press Ctrl+Shift+P â†’ Search: Python: Select Interpreter
    Choose the one from .venv or myenv\Scripts\python.exe
    VSCode will now use the virtual environment Python.
ðŸ’¡ No need to activate manually â€” VS Code handles environment activation internally.

ðŸ“Œ Tip: Save Your Environment
After installing packages, save the list for future use:
  pip freeze > requirements.txt

Others (or you) can recreate the environment later with:
  pip install -r requirements.txt

ðŸ“Œ Use the rmdir command to remove the folder and all its contents.
  rmdir /s /q myenv*
      /s removes all subdirectories and files in the specified directory in addition to the directory itself.
      /q is for "quiet mode," which means you won't be prompted to confirm the deletion.
